name: appstack

networks:
  proxy:
    name: proxy
    driver: bridge

volumes:
  nginx_certs:
  nginx_vhostd:
  nginx_html:
  acme:
  pg_data:

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks: [proxy]
    volumes:
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_vhostd:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro

  acme-companion:
    image: nginxproxy/acme-companion
    depends_on: [nginx-proxy]
    environment:
      - DEFAULT_EMAIL=${ACME_EMAIL}
      - NGINX_PROXY_CONTAINER=nginx-proxy
    restart: unless-stopped
    networks: [proxy]
    volumes:
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_vhostd:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro

  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks: [proxy]

  api:
    build:
      context: .
      dockerfile: src/Memes.Api/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      # connection string for EF Core (adjust key if your app expects a different name)
      - ConnectionStrings__Default=Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Pooling=true;Maximum Pool Size=50;Timeout=15
      - VIRTUAL_HOST=${API_DOMAIN}
      - LETSENCRYPT_HOST=${API_DOMAIN}
      - VIRTUAL_PORT=8080
    depends_on:
      db:
        condition: service_healthy
      nginx-proxy:
        condition: service_started
    restart: unless-stopped
    networks: [proxy]
